"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/hooks/useWhatsApp.ts":
/*!**********************************!*\
  !*** ./src/hooks/useWhatsApp.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWhatsApp: function() { return /* binding */ useWhatsApp; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _contexts_AuthContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/contexts/AuthContext */ \"(app-pages-browser)/./src/contexts/AuthContext.tsx\");\n/*\n * This file is part of WPPConnect.\n *\n * WPPConnect is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * WPPConnect is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with WPPConnect.  If not, see <https://www.gnu.org/licenses/>.\n */ \n\nfunction useWhatsApp() {\n    const [instances, setInstances] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [activeSessions, setActiveSessions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [recentActivity, setRecentActivity] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n    const { token } = (0,_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_1__.useAuth)();\n    const fetchInstances = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!token) {\n            setLoading(false);\n            return;\n        }\n        try {\n            setError(null);\n            console.log(\"\\uD83D\\uDD04 Fetching WhatsApp instances...\");\n            const response = await fetch(\"/api/whatsapp/instances\", {\n                headers: {\n                    \"Authorization\": \"Bearer \".concat(token),\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch instances: \".concat(response.status));\n            }\n            const data = await response.json();\n            console.log(\"\\uD83D\\uDCF1 WhatsApp instances:\", data);\n            setInstances(data);\n        } catch (err) {\n            console.error(\"❌ Error fetching WhatsApp instances:\", err);\n            setError(err instanceof Error ? err.message : \"Failed to fetch instances\");\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        token\n    ]);\n    const fetchActiveSessions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!token) return;\n        try {\n            console.log(\"\\uD83D\\uDD04 Fetching active sessions...\");\n            const response = await fetch(\"/api/whatsapp/sessions/active\", {\n                headers: {\n                    \"Authorization\": \"Bearer \".concat(token),\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (response.ok) {\n                const data = await response.json();\n                console.log(\"\\uD83D\\uDCF1 Active sessions:\", data.sessions);\n                setActiveSessions(data.sessions);\n            }\n        } catch (err) {\n            console.error(\"❌ Error fetching active sessions:\", err);\n        }\n    }, [\n        token\n    ]);\n    const getSessionInfo = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (instanceId)=>{\n        if (!token) return null;\n        try {\n            const response = await fetch(\"/api/whatsapp/instances/\".concat(instanceId, \"/session-info\"), {\n                headers: {\n                    \"Authorization\": \"Bearer \".concat(token),\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (response.ok) {\n                return await response.json();\n            } else {\n                console.error(\"Failed to fetch session info\");\n                return null;\n            }\n        } catch (error) {\n            console.error(\"Error fetching session info:\", error);\n            return null;\n        }\n    }, [\n        token\n    ]);\n    const checkSessionReady = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (instanceId)=>{\n        if (!token) return false;\n        try {\n            const response = await fetch(\"/api/whatsapp/instances/\".concat(instanceId, \"/ready\"), {\n                headers: {\n                    \"Authorization\": \"Bearer \".concat(token),\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (response.ok) {\n                const data = await response.json();\n                return data.isReady;\n            } else {\n                return false;\n            }\n        } catch (error) {\n            console.error(\"Error checking session ready:\", error);\n            return false;\n        }\n    }, [\n        token\n    ]);\n    const refreshInstances = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        setLoading(true);\n        await Promise.all([\n            fetchInstances(),\n            fetchActiveSessions()\n        ]);\n    }, [\n        fetchInstances,\n        fetchActiveSessions\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        fetchInstances();\n        fetchActiveSessions();\n    }, [\n        fetchInstances,\n        fetchActiveSessions\n    ]);\n    // Auto-refresh when page gains focus\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const handleFocus = ()=>{\n            console.log(\"\\uD83D\\uDD04 Page gained focus, refreshing WhatsApp instances...\");\n            refreshInstances();\n        };\n        window.addEventListener(\"focus\", handleFocus);\n        return ()=>window.removeEventListener(\"focus\", handleFocus);\n    }, [\n        refreshInstances\n    ]);\n    // Auto-refresh every 30 seconds when user is active\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const interval = setInterval(()=>{\n            if (!document.hidden) {\n                console.log(\"\\uD83D\\uDD04 Auto-refreshing WhatsApp instances...\");\n                refreshInstances();\n            }\n        }, 30000); // 30 seconds\n        return ()=>clearInterval(interval);\n    }, [\n        refreshInstances\n    ]);\n    const connectedInstances = instances.filter((instance)=>instance.status === \"CONNECTED\");\n    const hasConnectedInstances = connectedInstances.length > 0;\n    return {\n        instances,\n        activeSessions,\n        loading,\n        error,\n        connectedInstances,\n        hasConnectedInstances,\n        refreshInstances,\n        getSessionInfo,\n        checkSessionReady\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useWhatsApp.ts\n"));

/***/ })

});